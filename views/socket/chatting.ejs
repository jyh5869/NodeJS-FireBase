<html>
<head>
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    #messages {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }
  
    #messages li {
        padding: 5px 10px;
    }

    form {
        padding: 3px;
        position: fixed;
        bottom: 0;
        width: 100%;
    }

    form input {
        border: 1px solid black;
        padding: 10px;
        width: 90%;
        margin-right: .5%;
    }

    form button {
        width: 9%;
        background: skyblue;
        color: white;
        border: none;
        padding: 10px;
    }
</style>
</head>
<body>
<ul id="messages"></ul>
<form action="">
    <input id="m" autocomplete="off"/>
    <button>보내기</button>
</form>
<input type="hid_den" id="userEmail" value="<%=userEmail%>" >
<input type="hid_den" id="userName"  value="<%=userName%>" >
<input type="hid_den" id="changeName">
<button onclick="javascript:setUserId($('#changeName').val())">이름 바꾸기</button>
<script src="/socket.io/socket.io.js"></script>
<script src="http://code.jquery.com/jquery-1.11.1.js"></script>
<script>
var userName  = document.getElementById("userName").value;
var userEmail = document.getElementById("userEmail").value;

$(() => {
    
    if(userName == null || userName == ""){
        const name = prompt('사용자 이름/별명 등록되어 있지 않은 사용자입니다.\n 이름/별명을 입력해주세요');
        if(name != null && name != ""){
            setUserId(name); 
        }
    }
    

    const socket = io();
    $('form').submit(() => {
        let msg = {name: name, messege:$('#m').val()} 
        socket.emit('chat-msg', msg);
        $('#m').val('');
        return false;
    });

    socket.on('chat-msg', (msg) => {
        $('#messages').append($('<li>').text(msg.name + '  :  ' +msg.messege));
        
        //메시지 저장
        var formData = new FormData(); 
        $(formData).attr('accept-charset', 'UTF-8');
        
        formData.append("sender"   ,  msg.sender  );
        formData.append("receiver" ,  msg.sender  );
        formData.append("message"  ,  msg.messege );

        $.ajax({             
            type: "POST",          
            enctype: 'multipart/form-data',  
            url: "setChattingText",        
            data: formData,          
            processData: false,    
            contentType: false,      
            cache: false,           
            timeout: 600000,       
            success: function (data) { 
                alert("complete");
      
            },          
            error: function (e) {  
                console.log("ERROR : ", e);     
                alert("fail");      
            }     
        });  
    });
});

function setUserId(setName){

  var formData = new FormData();//form태그가 html에 없어야 생성가능  
  $(formData).attr('accept-charset', 'UTF-8');

  formData.append("setName"    , setName);
  formData.append("userEmail"  , userEmail);

  $.ajax({             
      type: "post",            
      url: "setUserName?setName="+setName+"&userEmail="+userEmail,        
      processData: false,    
      contentType: false,      
      cache: false,           
      timeout: 600000,       
      success: function (data) { 
          alert("complete");
          location.reload();
      },          
      error: function (e) {  
          console.log("ERROR : ", e);     
          alert("fail");      
      }     
  });
}
</script>
</body>
</html>