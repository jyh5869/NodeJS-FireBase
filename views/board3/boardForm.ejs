<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>board sample for firebase (Firestore Database) Write</title>

<%- include ("./common/include") %>

</head>
<body> 
    <!--상단 컨테이너 시작-->
    <%- include ("./common/header") %>
    <!--상단 컨테이너 끝-->
    <div> - conection ID : <%=userEmail%></div> 

    <form name="form1" id="form1" action="boardSave" method="post" enctype="multipart/form-data" >
        <table border="1" style="width:600px">
            <caption>board sample for firebase (Firestore Database) Write</caption>
            <colgroup>
                <col width='15%' />
                <col width='*%' />
            </colgroup>
            <tbody>
                <tr>
                    <td>Writer</td>
                    <td><input type="text" name="brdwriter" size="20" maxlength="20" value="<%=userEmail%>" readonly></td>
                </tr>
                <tr>
                    <td>Title</td>
                    <td><input type="text" name="brdtitle" size="70" maxlength="250" value="<%=row.brdtitle%>" ></td>
                </tr>
                <tr>
                    <td>Memo</td>
                    <td><textarea name="brdmemo" rows="5" cols="60"><%=row.brdmemo%></textarea>
                        <input type="hidden" name="brdno"        value="<%=row.brdno%>"     >
                        <input type="hidden" name="brddate"      value="<%=row.brddate%>"   >
                        <input type="hidden" name="brdType"      value="normal"             >
                        <input type="hidden" name="fileDelArray" id="fileDelArray" value="" >
                        <input type="hidden" name="fileInfo"     id="fileInfo"     value="" >
                    </td>
                </tr>
                <tr>
                    <td>File</td>
                    <td><input type="file" name="attachFile" id="attachFile" multiple></td>
                </tr>
                <tr>
                    <td>FileList</td>
                    <td>
                        <div neme="fileList" id="fileList">
                        <%
                            for(var i=0; i<fileRows.length; i++) {
                        %>
                        <div id="fileWrap_<%=fileRows[i].fileUuid%>" style="width: 45%; float: left;padding: 10pxs;margin: 10px;">
                            <div style="font-size:12px; margin: 10px 0px;">
                                <span><%=fileRows[i].fileNm%></span>&nbsp;&nbsp;
                                <span onclick="javascript:fileDeleteExist('<%=fileRows[i].fileUuid%>')" style="cursor: pointer;"> X </span>
                            </div>
                            <a href='download?filePath=images/<%=fileRows[i].fileUuid%>'>
                                <img src="download?filePath=images/<%=fileRows[i].fileUuid%>" width="100%"/>
                            </a>
                        </div> 
                        <%
                            }
                        %>
                        </div>
                    </td>
                </tr>        
            </tbody>
        </table>
        <a href="#" onclick="regAction();">Save</a>
        <a href="#" onclick="javascript:boardAction('boardDelete?brdno=<%=row.brdno%>','List');">List</a>
        
        
    </form>  
</body>
<script>

    $(document).ready(function() {
        // input file 파일 첨부시 fileCheck 함수 실행
        $("#attachFile").on("change", fileCheck);
    });

    // 파일 현재 필드 숫자 totalCount랑 비교값
    var fileCount = 0;
    // 해당 숫자를 수정하여 전체 업로드 갯수를 정한다.
    var totalCount = 10;
    // 파일 고유넘버
    var fileNum = 0;
    // 첨부파일 배열
    var content_files = new Array();

    function fileCheck(e) {
        var files = e.target.files;
        // 파일 배열 담기
        var filesArr = Array.prototype.slice.call(files);
    
        // 파일 개수 확인 및 제한
        if (fileCount + filesArr.length > totalCount) {
            $.alert('파일은 최대 '+totalCount+'개까지 업로드 할 수 있습니다.');
            return;
        } 
        else {
            fileCount = fileCount + filesArr.length;
        }
        
        // 각각의 파일 배열담기 및 기타
        filesArr.forEach(function (f) {
            var reader = new FileReader();
            reader.onload = function (e) {
                
                var fileInfo = f.name+ "," +f.type
                if($("#fileInfo").val() == ""){
                    $('#fileInfo').val(fileInfo);
                }
                else{
                    $('#fileInfo').val($("#fileInfo").val() + "|" + fileInfo);
                }

                content_files.push(f);

                var imgStr = "";

                imgStr += '<div id="fileWrap_' + fileNum + '"  style="width: 45%; float: left;padding: 10pxs;margin: 10px;">'
                imgStr += '<div style="font-size:12px; margin: 10px 0px;">'
                imgStr += '<span>'+ f.name +'</span>&nbsp;&nbsp;'
                imgStr += '<span onclick="fileDeleteNew(\'' + fileNum + '\')" style="cursor: pointer;"> X </span>'
                imgStr += '</div>'
                imgStr += '<a href="javascript:void(0);">'    
                imgStr += '<img src="'+e.target.result+'" width="100%" />'           
                imgStr += '</a>'
                imgStr += '</div>'   
                
                $('#fileList').append(imgStr);

                fileNum ++;
            };
            reader.readAsDataURL(f);
        });
        console.log(content_files);
        
        //초기화 한다.
        $("#attachFile").val("");
    }

    // 파일 부분 삭제 함수 (새로운 첨부파일)
    function fileDeleteNew(fileNum){
        var no = fileNum.replace(/[^0-9]/g, "");
        content_files[no].is_delete = true;
        $('#fileWrap_' + fileNum).remove();
        fileCount --;
        console.log(content_files);
    }

    // 파일 부분 삭제 함수(기존 첨부파일)
    function fileDeleteExist (deleteIdx){
        
        var fileDelArray = $('#fileDelArray').val();
        
        if(fileDelArray == ""){
            $('#fileDelArray').val(deleteIdx);
        }
        else{
            $('#fileDelArray').val(fileDelArray + "|" + deleteIdx);
        }

        $("#fileWrap_"+ deleteIdx).remove();
    }

    //폼 값 전송
    function regAction() {  

        var formData = new FormData();//form태그가 html에 없어야 생성가능  
        $(formData).attr('accept-charset', 'UTF-8');

        //formData.method = "get"; 
        //formData.action = "boardSave"
        //formData.enctype ='multipart/form-data';

        formData.append("brdwriter"    , $("input[name=brdwriter]"    ).val());
        formData.append("brdtitle"     , $("input[name=brdtitle]"     ).val());
        formData.append("brdmemo"      , $("textarea[name=brdmemo]"   ).val());
        formData.append("brdno"        , $("input[name=brdno]"        ).val());
        formData.append("brddate"      , $("input[name=brddate]"      ).val());
        formData.append("brdType"      , $("input[name=brdType]"      ).val());
        formData.append("fileDelArray" , $("input[name=fileDelArray]" ).val());
        formData.append("fileInfo"     , $("input[name=fileInfo]"     ).val());

        for (var x = 0; x < content_files.length; x++) {
            // 삭제 안한것만 담아 준다. 
            if(!content_files[x].is_delete){
                formData.append("file"+x, content_files[x]);
            }               
        } 
        //formData.submit();

        $.ajax({             
            type: "POST",          
            enctype: 'multipart/form-data',  
            url: "boardSave",        
            data: formData,          
            processData: false,    
            contentType: false,      
            cache: false,           
            timeout: 600000,       
            success: function (data) { 
                alert("complete");
                location.href="boardList"      
            },          
            error: function (e) {  
                console.log("ERROR : ", e);     
                alert("fail");      
            }     
        });  

    }    
</script>
</html>