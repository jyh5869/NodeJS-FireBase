<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>chatting sample for firebase (Firestore Database)</title>
<%- include ("../common/include") %>

</head>
<body>
    <!--상단 컨테이너 시작-->
    <%- include ("../common/header", {menuType: "cht"}) %>
    <!--상단 컨테이너 끝-->
    <div id="chtWrap">
        <ul id="messages"></ul>
    </div>
    <div>
        <form action="" class="cht">
            <input id="m" autocomplete="off"/>
            <button>전송</button>
            <input type="hidden" id="userEmail" value="<%=user.email%>" readonly>
            <input type="hidden" id="userName"  value="<%=user.displayName%>"  readonly>
        </form>
    </div>
<script src="/socket.io/socket.io.js"></script>
<script>

var userName  = document.getElementById("userName").value;
var userEmail = document.getElementById("userEmail").value;

$(() => {
    
    //사용자 유효성 확인
    if(userName == null || userName == ""){
        const name = prompt('사용자 이름/별명 등록되어 있지 않은 사용자입니다.\n 이름/별명을 입력해주세요');
        if(name != null && name != ""){
            setUserId(name); 
        }
    }
    
    getChtHistory();//채팅 리스트 가져오기

    //보내기 버튼 클릭시
    const socket = io();
    $('form').submit(() => {
        let msg = {userEmail: userEmail, messege:$('#m').val(), sender : "오은지"} 
        socket.emit('chat-msg', msg);
        $('#m').val('');
        return false;
    });

    socket.on('chat-msg', (msg) => {
        //입력 메세지 채팅창에 추가하기 
        var html = "";
        
        html += '<li>';
            html += '<div class="right">';
                html += '<div>';    
                    html += '<span>'+msg.messege+'</span>';    
                html += '</div>';
                html += '<div>';/* 날짜 포멧으로 가져오는 js 만들기 */
                    html += '<span>'+setCurrentTime("-");+'</span>';    
                html += '</div>';
            html += '</div>';
        html += '</li>';

        $('#messages').append(html);
        
        //입력 메시지 저장
        var formData = new FormData(); 
        $(formData).attr('accept-charset', 'UTF-8');
        
        formData.append("sender"   ,  msg.userEmail);
        formData.append("receiver" ,  msg.sender   );
        formData.append("message"  ,  msg.messege  );

        $.ajax({             
            type: "POST",          
            enctype: 'multipart/form-data',  
            url: "setChattingText",        
            data: formData,          
            processData: false,    
            contentType: false,      
            cache: false,           
            timeout: 600000,       
            success: function (data) { 
      
            },          
            error: function (e) {  
                console.log("ERROR : ", e);     
                alert("fail");      
            }     
        });  
        //스크롤 맨 아래로
        $("html").scrollTop($("html").height());
    });
    
});

/*
    채팅 이력 세팅
*/
function getChtHistory(){

    $.ajax({             
        type: "POST",          
        enctype: 'multipart/form-data',  
        url: "getChtHistory",        
        data: null,          
        processData: false,    
        contentType: false,      
        cache: false,           
        timeout: 600000,       
        success: function (obj) {
            
            var chtSize = $(obj.rows).size();
    
            $(obj.rows).each(function(index, msg){
                var message   = msg.message;
                var receiveId = msg.receiveId.split("|")[0];
                var sendId    = msg.sendId;
                var texId     = msg.textId;
                var regDate   = msg.regDate;
                var nickName  = msg.receiveId.split("|")[1];

                var html = "";
                var chtClass; //자기가 쓴 글일 경우와 아닐경우 UI 클래스 할당
                
                if(userEmail == sendId){
                    chtClass = "right";

                    html += '<li>';
                        html += '<div class="'+chtClass+'">';
                            html += '<div>';    
                                html += '<span>'+message+'</span>';  
                            html += '</div>';
                            html += '<div>';    
                                html += '<span>'+regDate+'</span>';    
                            html += '</div>';
                        html += '</div>';
                    html += '</li>';
                }
                else{
                    chtClass = "left";
                    
                    html += '<li>';
                        html += '<div class="'+chtClass+'">';
                            html += '<div>';    
                                html += '<span>'+message+'</span>';    
                            html += '</div>';
                            html += '<div>';    
                                html += '<span title="사용자ID : '+sendId+'">'+nickName+'</span>'; 
                            html += '</div>';
                            html += '<div>';    
                                html += '<span>'+regDate+'</span>';    
                            html += '</div>';
                        html += '</div>';
                    html += '</li>';
                }
                
                $('#messages').append(html);
                
                //스크롤 맨 아래로
                if(index + 1 == chtSize){
                    $("html").scrollTop($("html").height());
                }  
            });  
        },          
        error: function (e) {  
            console.log("ERROR : ", e);     
            alert("fail");      
        }     
    });


    
      
}

/*
    변경될 닉네임 입력 창 호출
*/
function insertChgId(){
    const name = prompt('변경하실 사용자 명을 입력해 주세요.');

    if(name == null || name == ""){
        alert('올바른 형식의 사용자 명을 입력해 주세요');
        return false;
    }
    else {
        setUserId(name);
    }
}

/*
    입력 받은 값으로 유저 닉네임 변경
    1. name : 닉네임 
*/
function setUserId(name){

    var formData = new FormData();//form태그가 html에 없어야 생성가능  
    $(formData).attr('accept-charset', 'UTF-8');

    formData.append("setName"    , name);
    formData.append("userEmail"  , userEmail);

    $.ajax({             
        type: "post",            
        url: "setUserName?setName="+name+"&userEmail="+userEmail,        
        processData: false,    
        contentType: false,      
        cache: false,           
        timeout: 600000,       
        success: function (data) { 
            alert("complete");
            location.reload();
        },          
        error: function (e) {  
            console.log("ERROR : ", e);     
            alert("fail");      
        }     
    });
}
</script>
</body>
</html>